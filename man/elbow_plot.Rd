% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{elbow_plot}
\alias{elbow_plot}
\title{Plot to aid choosing regularization constant}
\usage{
elbow_plot(
  data_matrix,
  lambda_left = 0,
  lambda_right = 10,
  step = 0.5,
  model_args = list(),
  pkg = "base"
)
}
\arguments{
\item{data_matrix}{Data frame or matrix containing the data set to be
segmented.}

\item{lambda_left}{Left most value of lambda. Must be non-negative.}

\item{lambda_right}{Right most value of lambda. Must be non-negative and
greater than lambda_left.}

\item{step}{Value by which lambda will be increased. Must be greater than 0,
with default 1.}

\item{model_args}{A list with argument values for the
\link[=fit_blockcpd]{fit_blockcpd} function. The list keys must be the
arguments names. It must \emph{not} contain the argument 'lambda' or
'data_matrix'.}

\item{pkg}{Graphical package to be used for plotting. Current values are
"base".}
}
\value{
Along with the plot, it returns a list containing the lambda values,
number of change points per lambda, the negative log likelihood per lambda
and the model_args.
}
\description{
Plots how the number of change-points estimated by the given model vary
with the regularization constant lambda. It is similar to the Elbow method
used in clustering. The values of the constant range from 'lambda_left' to
'lambda_right', increasing by 'step'. For each value, the function
\link[=fit_blockcpd]{fit_blockcpd} is run with arguments 'model_args'. The
modeler should choose the first value by which the number of change-points
curve starts to "flat-out" after that value. If there are at least 10 values
of constants to evaluate, a suggestion for lambda is also provided.
}
